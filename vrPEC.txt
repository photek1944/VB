Private Function IsInArray(valToBeFound As Variant, arr As Variant) As Boolean

Dim element As Variant
On Error GoTo IsInArrayError:
    For Each element In arr
        If element = valToBeFound Then
            IsInArray = True
            Exit Function
        End If
    Next element
Exit Function
IsInArrayError:
On Error GoTo 0
IsInArray = False
End Function

Sub ophalen_voorraad()

Dim wkb1 As Workbook
Dim wkb2 As Workbook
Dim fileName As String
Dim nDate As String
Dim RetVal As Variant
Dim wk_name As Variant
Dim wsh As Object
Set wsh = VBA.CreateObject("WScript.Shell")
Dim waitOnReturn As Boolean: waitOnReturn = True
Dim windowStyle As Integer: windowStyle = 1
Dim removeArray() As Variant
Dim addArray() As Variant
Dim TotalRowsRemoved As Long
Dim bandNumber As String
Dim RowToTest As Long
Dim RowToAdd As Long
Dim TotalRowsAdded As Long
Dim element As Variant

Application.ScreenUpdating = False
Application.DisplayAlerts = False

'verandert de folder naar de map met de voorraadlijsten
ChDrive "C"
ChDir "C:\Users\Niels\Desktop\PEC VR 2"

'laat de gebruiker een voorraadlijst selecteren
fileName = Application.GetOpenFilename( _
    FileFilter:="xl Files,*.xl*,xm Files,*.xm*", _
    Title:="Selecteer de Excel-file van de voorraadlijst om de huidige voorraad mee te vergelijken.", _
    MultiSelect:=False)

'maakt objecten van de actieve werkmap en creÃ«ert een nieuwe werkmap voor het geselecteerde bestand
Set wkb1 = ActiveWorkbook
Set wkb2 = Workbooks.Add(fileName)

'kopieert het eerste werkblad van het geselecteerde bestand naar de actieve werkmap
wkb2.Sheets(1).Copy After:=wkb1.Sheets(1)
'focust op het werkblad van de huidige voorraad
wkb1.Sheets(1).Activate
'sluit de werkmap van de gekopieerde voorraad
wkb2.Close

'herformatteert de datum en tijd van vandaag
nDate = Format(Date, "yyyy-mm-dd")
nTime = Format(Time, "(hhumm)")

'geeft het werkblad de datum van vandaag als titel
ActiveWorkbook.Worksheets(1).Name = nDate & " " & nTime
'slaat de nieuwe werkmap op als een xlsm bestand
ActiveWorkbook.SaveAs fileName:=nDate & " " & nTime & " PEC Voorraad", FileFormat:=xlOpenXMLWorkbookMacroEnabled
wk_name = nDate & " " & nTime & " PEC Voorraad.xlsm"
'sluit de werkmap alvorens python code uit te voeren
ActiveWorkbook.Close

wsh.Run "C:\Users\Niels\AppData\Local\Programs\Python\Python35\Scripts\dist\vrPEC\vrPEC.exe", windowStyle, waitOnReturn

'opent opnieuw het werkboek nadat de python code uitgevoerd is
Workbooks.Open (wk_name)

'slaat de verwijderde ringnummers op in een array
Worksheets("verwijderd").Activate
TotalRowsRemoved = Rows(Rows.Count).End(xlUp).Row
If TotalRowsRemoved <> 0 Then
    removeArray = Range(Cells(1, 1), Cells(TotalRowsRemoved, 1)).Value
End If

'slaat de toegevoegde ringnummers op in een array
Worksheets("toegevoegd").Activate
TotalRowsAdded = Rows(Rows.Count).End(xlUp).Row
addArray = Range(Cells(1, 1), Cells(TotalRowsAdded, 1)).Value

Worksheets(2).Activate

'zoekt voor elke rij of het ringnummer in kolom C terug te vinden is in de array met verwijderde ringnummers en indien WAAR verwijdert de volledige rij
For RowToTest = Cells(Rows.Count, "C").End(xlUp).Row To 6 Step -1
    bandNumber = Cells(RowToTest, "C").Value
    If IsInArray(bandNumber, removeArray) Then
        Rows(RowToTest).EntireRow.Delete
    End If
Next

'zoekt de laatste rij met data in kolom "C" - 7 en voegt alle toegevoegde ringnummers toe
For Each element In addArray
    RowToAdd = Cells(Rows.Count, "C").End(xlUp).Row - 7
    Cells(RowToAdd, "C").Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    Cells(RowToAdd, "C") = element
Next element




Application.ScreenUpdating = True
Application.DisplayAlerts = True

End Sub

Option Explicit

Dim dagenSindsVF As Integer
Dim datumVF As Variant
Dim vandaag As Date
Dim RowToTest As Integer
Dim aantalReminders As Integer
Dim datumLaatsteRem As Date
Dim lastRow As Integer
Dim lastRowComdocs As Integer
Dim checkCT As String
Dim InCollection As Boolean
Dim CT As Variant
Dim i As Integer

Function LOOKUP_CONCAT(Search_string As String, _
Search_in_col As Range, Return_val_col As Range)

  Dim i As Long
  Dim result As String

    For i = 1 To Search_in_col.Count
      If Search_in_col.Cells(i, 1) = Search_string And Return_val_col.Cells(i, 1).Value <> "" Then
        result = result & " " & Return_val_col.Cells(i, 1).Value & Chr(10)
      End If
    Next

  result = Left(result, Len(result) - 1)

  LOOKUP_CONCAT = Trim(result)

End Function


Sub nonPayers()

'open de vorige niet-betalers xlsm en maak beschikbaar als extra werkblad
'om later opmerkingen en de datum van de opmerkingen uit te kopiëren
'ook het werkblad 'herverkopen' meenemen uit de oude sheet

vandaag = Date

For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    datumVF = Cells(RowToTest, "AC").Value
    If IsDate(datumVF) = True Then
        datumVF = datumVF - 1
        dagenSindsVF = Date - datumVF
        If dagenSindsVF < 12 Then
            Range("AD" & RowToTest).Value = 0
            Range("AE" & RowToTest).Value = "-"
        ElseIf dagenSindsVF >= 12 And dagenSindsVF < 19 Then
            aantalReminders = 1
            Range("AD" & RowToTest).Value = aantalReminders
            datumLaatsteRem = datumVF + 12
            Range("AE" & RowToTest).Value = datumLaatsteRem
        ElseIf dagenSindsVF >= 19 Then
            aantalReminders = ((dagenSindsVF - 12) \ 7) + 1
            Range("AD" & RowToTest).Value = aantalReminders
            datumLaatsteRem = datumVF + 12 + ((aantalReminders - 1) * 7)
            Range("AE" & RowToTest).Value = datumLaatsteRem
        End If
    Else
        Range("AD" & RowToTest).Value = 0
        Range("AE" & RowToTest).Value = "-"
    End If
Next

'alle klanten CTs met reminders > 0 en klantsaldo > 0 toevoegen in collection
Dim clientsOverdue As Collection
Set clientsOverdue = New Collection

On Error Resume Next
For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    If Range("AD" & RowToTest).Value > 0 And Range("AQ" & RowToTest).Value > 0 Then
        clientsOverdue.Add Range("T" & RowToTest).Value, Range("T" & RowToTest).Value
    End If
Next
On Error GoTo 0

'voor elke rij checken of het CT-nr voor komt in de collection, zoniet, rij deleten/verbergen
For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    checkCT = Range("T" & RowToTest).Value
    InCollection = False
    For Each CT In clientsOverdue
        If CT = checkCT Then
            InCollection = True
        End If
    Next CT
    If InCollection = False Then
        Rows(RowToTest).EntireRow.Hidden = True
    End If
Next

'voer elke VipCT in in collection 'VIP'
Sheets("VIP").Activate
Dim Vip As Collection
Set Vip = New Collection

lastRow = Cells(Rows.Count, "B").End(xlUp).Row
On Error Resume Next
For i = 3 To lastRow
    Vip.Add Range("B" & i), Range("B" & i)
Next
On Error GoTo 0

'voor alle VIPs op tabblad VIP, categorie (AH) tabblad niet-betalers wijzigen naar VIP
Sheets("niet-betalers").Activate
For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    checkCT = Range("T" & RowToTest).Value
    For Each CT In Vip
        If CT = checkCT Then
            Range("AH" & RowToTest).Value = "VIP"
            Range("AH" & RowToTest).Interior.Color = 65535
        End If
    Next CT
Next

'voor alle Standards die aan 4 reminders zitten categorie aanpassen naar Non-payer, om lijst voor te leggen aan zaakvoerders
For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    If Range("AD" & RowToTest).Value >= 4 Then
        Range("AD" & RowToTest).Interior.Color = 255
    End If
    If Range("AD" & RowToTest).Value >= 4 And Range("AH" & RowToTest).Value <> "VIP" Then
        Range("AH" & RowToTest).Value = "Non-payer"
        Range("AH" & RowToTest).Interior.Color = 255
    End If
Next

'na aanpassing van status herverkopen/pipa koopt/terug naar verkoper, aparte knoppen om worksheets te genereren
'worksheet pipa koopt (finance crediteert factuur en betaalt verkoper uit), shipping only aanmaken voor PIPA Trading en uitboeken als bij PIPA, leverancier wijzigen naar PIPA Trading
'worksheet terug naar verkoper (finance crediteert alle documenten en logistics maakt order shipping only)
'worksheet herverkopen, aanvullen met rijen waar nodig, indien ringnummer al bestaat error geven

'error voorzien: indien een ringnummer al bestaat op het worksheet, kan de rij niet overgezet worden

'lookup functie toevoegen om commissies in één cel te krijgen
Sheets("comdocs").Activate
lastRowComdocs = Cells(Rows.Count, "D").End(xlUp).Row
Sheets("niet-betalers").Activate
lastRow = Cells(Rows.Count, "D").End(xlUp).Row
Range("AY6:AY" & lastRow).Formula = "=LOOKUP_CONCAT($L6,'comdocs'!$D$3:$D$" & lastRow & ",'comdocs'!$E$3:$E$" & lastRow & ")"

'tekstterugloop AY 

'opmerkingen overkopieren
'overwegen om ook status van duif mee te nemen van op vorige lijst -> indien een duif nog niet op afgewerkt is gezet (niet correct afgehandeld), komt ze nog eens in de lijst met een waarde in status duif
'eerst deze duiven terug afwerken en dan jet opnieuw laten draaien, ofwel de rij verwijderen in de excel

'centreren van bladen (niet-betalers: rijhoogte is gelijk aan ringnummer, jordy: rijhoogte is gelijk aan inhoud comdoc cellen
'jet aanpassen: bug bij "particulier/bedrijf" -> no agents found
'jet aanpassen: comdocs -> alleen laatste comdocs trekken
'flow uitwerken in visio + manual opstellen
'nieuwe jet maken voor betaald/nog niet verzonden na x aantal weken

End Sub

Option Explicit

Dim dagenSindsVF As Integer
Dim datumVF As Variant
Dim vandaag As Date
Dim RowToTest As Integer
Dim aantalReminders As Integer
Dim datumLaatsteRem As Date
Dim lastRow As Integer
Dim lastRow2 As Integer
Dim lastRowComdocs As Integer
Dim checkCT As String
Dim InCollection As Boolean
Dim CT As Variant
Dim i As Integer
Dim nDate As Variant
Dim nTime As Variant
Dim Filename As String
Dim wkb1 As Workbook, wkb2 As Workbook
Dim wk_name As Variant
Dim Sheet2Name As String
Dim x As Integer
Dim cell As Integer


Function LOOKUP_CONCAT(Search_string As String, _
Search_in_col As Range, Return_val_col As Range)

  Dim i As Long
  Dim result As String

    For i = 1 To Search_in_col.Count
      If Search_in_col.Cells(i, 1) = Search_string And Return_val_col.Cells(i, 1).Value <> "" Then
        result = result & " " & Return_val_col.Cells(i, 1).Value & Chr(10)
      End If
    Next

  result = Left(result, Len(result) - 1)

  LOOKUP_CONCAT = Trim(result)

End Function


Sub nonPayers()

Application.ScreenUpdating = False
Application.DisplayAlerts = False

'herformatteert de datum en tijd van vandaag
nDate = Format(Date, "yyyy-mm-dd")
nTime = Format(Time, "(hhumm)")

'versie toevoegen
Range("N3").Value = "Versie: " & nDate & " " & "(" & Time & ")"

'geeft het werkblad de datum van vandaag als titel
ActiveWorkbook.Worksheets(1).Name = "NB " & nDate & " " & nTime

'verandert de folder naar de map met de niet-betalerslijsten
ChDrive "C"
ChDir "C:\Users\Niels\Desktop\niet-betalersflow\NB test vba"

'laat de gebruiker een xl bestand kiezen om toe te voegen
Filename = Application.GetOpenFilename( _
    FileFilter:="xl Files,*.xl*,xm Files,*.xm*", _
    Title:="Selecteer de vorige niet-betalerslijst.", _
    MultiSelect:=False)

'maakt objecten van de actieve werkmap en creÃ«ert een nieuwe werkmap voor het geselecteerde bestand
Set wkb1 = ActiveWorkbook
Set wkb2 = Workbooks.Add(Filename)

'kopieert het eerste werkblad van het geselecteerde bestand naar de actieve werkmap
wkb2.Sheets(1).Copy After:=wkb1.Sheets(1)
wkb2.Sheets("herverkopen").Copy After:=wkb1.Sheets(2)
wkb2.Sheets("VIP").Copy After:=wkb1.Sheets(3)

'sluit de werkmap van de gekopieerde niet-betalerslijst
wkb2.Close

'slaat de nieuwe werkmap op als een xlsm bestand
ActiveWorkbook.SaveAs Filename:=nDate & " " & nTime & " Niet-betalers", FileFormat:=xlOpenXMLWorkbookMacroEnabled
wk_name = nDate & " " & nTime & " Niet-betalers.xlsm"

'converteren naar waarden
Worksheets(1).Activate
With Range("K:K")
    .Value = .Value
End With
Worksheets("comdocs").Activate
With Range("D:D")
    .Value = .Value
End With

'opmerkingen overnemen van vorige niet-betalerslijst
Worksheets(2).Activate
lastRow2 = Cells(Rows.Count, "L").End(xlUp).Row
Worksheets(1).Activate
lastRow = Cells(Rows.Count, "L").End(xlUp).Row
Sheet2Name = Sheets(2).Name
Range("AF6:AF" & lastRow).Formula = "=IFERROR(IF(VLOOKUP($L6,'" & Sheet2Name & "'!$L$5:$AF$" & lastRow2 & ",21,FALSE)="""","""",VLOOKUP($L6,'" & Sheet2Name & "'!$L$5:$AF$" & lastRow2 & ",21,FALSE)),"""")"
Range("AG6:AG" & lastRow).Formula = "=IFERROR(IF(VLOOKUP($L6,'" & Sheet2Name & "'!$L$5:$AG$" & lastRow2 & ",22,FALSE)="""","""",VLOOKUP($L6,'" & Sheet2Name & "'!$L$5:$AG$" & lastRow2 & ",22,FALSE)),"""")"
'indien een duif nog niet op afgewerkt is gezet (niet correct afgehandeld), komt ze nog eens in de lijst met een waarde in status duif
'eerst deze duiven terug afwerken en dan jet opnieuw laten draaien, ofwel de rij verwijderen in de excel
Range("AI6:AI" & lastRow).Formula = "=IFERROR(IF(VLOOKUP($L6,'" & Sheet2Name & "'!$L$5:$AI$" & lastRow2 & ",24,FALSE)="""","""",VLOOKUP($L6,'" & Sheet2Name & "'!$L$5:$AI$" & lastRow2 & ",24,FALSE)),"""")"

vandaag = Date

For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    datumVF = Cells(RowToTest, "AC").Value
    If IsDate(datumVF) = True Then
        datumVF = datumVF - 1
        dagenSindsVF = Date - datumVF
        If dagenSindsVF < 12 Then
            Range("AD" & RowToTest).Value = 0
            Range("AE" & RowToTest).Value = "-"
        ElseIf dagenSindsVF >= 12 And dagenSindsVF < 19 Then
            aantalReminders = 1
            Range("AD" & RowToTest).Value = aantalReminders
            datumLaatsteRem = datumVF + 12
            Range("AE" & RowToTest).Value = datumLaatsteRem
        ElseIf dagenSindsVF >= 19 Then
            aantalReminders = ((dagenSindsVF - 12) \ 7) + 1
            Range("AD" & RowToTest).Value = aantalReminders
            datumLaatsteRem = datumVF + 12 + ((aantalReminders - 1) * 7)
            Range("AE" & RowToTest).Value = datumLaatsteRem
        End If
    Else
        Range("AD" & RowToTest).Value = 0
        Range("AE" & RowToTest).Value = "-"
    End If
Next

'alle klanten CTs met reminders > 0 en klantsaldo > 0 toevoegen in collection
Dim clientsOverdue As Collection
Set clientsOverdue = New Collection

On Error Resume Next
For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    If Range("AD" & RowToTest).Value > 0 And Range("AQ" & RowToTest).Value > 0 Then
        clientsOverdue.Add Range("M" & RowToTest).Value, Range("M" & RowToTest).Value
    End If
Next
On Error GoTo 0

'voor elke rij checken of het CT-nr voor komt in de collection, zoniet, rij deleten/verbergen
For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    checkCT = Range("M" & RowToTest).Value
    InCollection = False
    For Each CT In clientsOverdue
        If CT = checkCT Then
            InCollection = True
        End If
    Next CT
    If InCollection = False Then
        Rows(RowToTest).EntireRow.Delete
    End If
Next

'sorteren land -> klantnaam -> factuurdatum -> leveranciernaam -> ringnummer
ActiveWorkbook.Worksheets(1).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("O6:O" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("N6:N" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("AC6:AC" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("Q6:Q" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("L6:L" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    With ActiveWorkbook.Worksheets(1).Sort
        .SetRange Range("A5:AZ" & lastRow)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    

'format per klant
lastRow = Cells(Rows.Count, "L").End(xlUp).Row
x = 0
For cell = 7 To lastRow
    If (Cells(cell, 13).Value = Cells(cell - 1, 13).Value) Then
            Range("L" & cell - 1 & ":AZ" & cell - 1).Select
            Selection.Copy
            Range("L" & cell & ":AZ" & cell).Select
            Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
                SkipBlanks:=False, Transpose:=False
            Application.CutCopyMode = False
    Else
        If x = 0 Then
            x = 1
            With Range("L" & cell & ":AZ" & cell).Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .ThemeColor = xlThemeColorAccent1
                .TintAndShade = 0.799981688894314
                .PatternTintAndShade = 0
            End With
        ElseIf x = 1 Then
            x = 0
            With Range("L" & cell & ":AZ" & cell).Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .ThemeColor = xlThemeColorDark1
                .TintAndShade = 0
                .PatternTintAndShade = 0
            End With
        End If
    End If
Next cell

'omkaderen
Range("L6:AZ" & lastRow).Select
Selection.Borders(xlDiagonalDown).LineStyle = xlNone
Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With


'voeg elk VIPct toe aan collectie 'VIP'
Sheets("VIP").Activate
Dim Vip As Collection
Set Vip = New Collection

lastRow = Cells(Rows.Count, "B").End(xlUp).Row
On Error Resume Next
For i = 3 To lastRow
    Vip.Add Range("B" & i), Range("B" & i)
Next
On Error GoTo 0

'voor alle VIPs op tabblad VIP, categorie (AH) tabblad niet-betalers wijzigen naar VIP
Sheets(1).Activate
For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    checkCT = Range("T" & RowToTest).Value
    For Each CT In Vip
        If CT = checkCT Then
            Range("AH" & RowToTest).Value = "VIP"
            Range("N" & RowToTest).Select
            Selection.Style = "Neutraal"
        End If
    Next CT
Next

'voor alle Standards die aan 4 reminders zitten categorie aanpassen naar Non-payer, om lijst voor te leggen aan zaakvoerders
For RowToTest = Cells(Rows.Count, "L").End(xlUp).Row To 6 Step -1
    If Range("AD" & RowToTest).Value >= 4 Then
        Range("AD" & RowToTest).Select
        With Selection.Font
            .Color = -16776961
            .TintAndShade = 0
        End With
        Range("L" & RowToTest).Select
        With Selection.Font
            .Color = -16776961
            .TintAndShade = 0
        End With
        Range("N" & RowToTest).Select
        With Selection.Font
            .Color = -16776961
            .TintAndShade = 0
        End With
    End If
    If Range("AD" & RowToTest).Value >= 4 And Range("AH" & RowToTest).Value <> "VIP" Then
        Range("AH" & RowToTest).Value = "Non-payer"
        Range("AH" & RowToTest).Select
        With Selection.Font
            .Color = -16776961
            .TintAndShade = 0
        End With
    End If
Next

'lookup functie toevoegen om commissies in Ã©Ã©n cel te krijgen
Sheets("comdocs").Activate
lastRowComdocs = Cells(Rows.Count, "D").End(xlUp).Row
Sheets(1).Activate
lastRow = Cells(Rows.Count, "D").End(xlUp).Row
Range("AY6:AY" & lastRow).Formula = "=LOOKUP_CONCAT($L6,'comdocs'!$D$3:$D$" & lastRowComdocs & ",'comdocs'!$E$3:$E$" & lastRowComdocs & ")"

'rijhoogtes aanpassen aan standaardhoogte
Rows("6:" & lastRow).Select
    Selection.RowHeight = 15

'kolombreedtes autofitten
Columns("L:BA").Select
        Selection.Columns.AutoFit

'centreren van bladen (niet-betalers: rijhoogte is gelijk aan ringnummer, jordy: rijhoogte is gelijk aan inhoud comdoc cellen
'jet aanpassen: comdocs -> alleen laatste comdocs trekken, kijken om gebruik te maken van het VT-order hiervoor

'na aanpassing van status herverkopen/pipa koopt/terug naar verkoper, aparte knoppen om worksheets te genereren
'worksheet pipa koopt (finance crediteert factuur en betaalt verkoper uit), shipping only aanmaken voor PIPA Trading en uitboeken als bij PIPA, leverancier wijzigen naar PIPA Trading
'worksheet terug naar verkoper (finance crediteert alle documenten en logistics maakt order shipping only)
'worksheet herverkopen, aanvullen met rijen waar nodig, indien ringnummer al bestaat error geven

'error voorzien: indien een ringnummer al bestaat op het worksheet, kan de rij niet overgezet worden

'flow uitwerken in visio + manual opstellen
'nieuwe jet maken voor betaald/nog niet verzonden na x aantal weken

Application.ScreenUpdating = True
Application.DisplayAlerts = True

End Sub

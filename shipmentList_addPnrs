Option Explicit

Dim rng As Range
Dim lastRow As Long, totalCount As Long, pigeonCount As Long, expensiveCount As Long, Pcount As Long, totalPigeonCount As Long
Dim Cell As Object, client As Variant
Dim startingRow As Long, endingRow As Long, i As Long, remainder As Long
Dim counter As Long, nextStartingRow As Long, addRows As Long, subtractRows As Long

Private Sub set_Range(ByRef client As Variant)

startingRow = Columns("E").Find(What:=client, LookAt:=xlWhole, MatchCase:=False).Row
endingRow = Columns("E").Find(What:=client, LookAt:=xlWhole, SearchDirection:=xlPrevious, MatchCase:=False).Row

End Sub

Private Sub count_Pigeons(ByRef client As Variant)

Set rng = Range("E" & startingRow + addRows & ":E" & endingRow - subtractRows)
pigeonCount = Application.WorksheetFunction.CountIf(rng, client)

End Sub

Private Sub count_Expensive(ByRef rng As Range)

Set rng = Range("D" & startingRow + addRows & ":D" & endingRow - subtractRows)
expensiveCount = 0
For Each Cell In rng
    If Cell.Interior.Color = 65535 Then
        expensiveCount = expensiveCount + 1
    End If
Next Cell

End Sub

Private Sub print_PMD(ByRef rng As Range)

For Each Cell In rng
    If Cell.Offset(-1, 1).Value = "" Then
        Cell = Cell.Offset(-1, 0).Value
    Else
        Cell = Pcount + 1
        Pcount = Pcount + 1
    End If
Next Cell
If totalCount = 1 Then
    totalCount = totalCount + 1
End If
Range("B" & endingRow - subtractRows).Value = totalCount
Range("C" & endingRow - subtractRows).Value = pigeonCount

End Sub

Sub abbreviated_add_P()

lastRow = Cells(Rows.Count, "E").End(xlUp).Row
Range("A2:C" & lastRow).Value = ""

Dim clientCollection As Collection
Set clientCollection = New Collection

Set rng = Range("E2:E" & lastRow)
For Each Cell In rng
    On Error Resume Next
        clientCollection.Add Cell, Cell
    On Error GoTo 0
Next Cell

[A1] = 0

For Each client In clientCollection
    subtractRows = 0
    addRows = 0
    Call set_Range(client)
    Call count_Pigeons(client)
    Call count_Expensive(rng)
    totalCount = pigeonCount + expensiveCount
    
    Select Case totalCount
    
    Case 1 To 6, 8, 10, 12:
        Set rng = Range("A" & startingRow & ":A" & endingRow)
        Call print_PMD(rng)

    Case 7, 9, 11:
        'add content to basket part 1
        addRows = 0
        subtractRows = Int(pigeonCount / 2)
        totalPigeonCount = pigeonCount
        Call set_Range(client)
        Call count_Pigeons(client)
        Call count_Expensive(rng)
        totalCount = pigeonCount + expensiveCount
        Set rng = Range("A" & startingRow + addRows & ":A" & endingRow - subtractRows)
        Call print_PMD(rng)
        
        'add content to basket part 2
        addRows = Int(totalPigeonCount / 2 + 0.999999)
        subtractRows = 0
        Call set_Range(client)
        Call count_Pigeons(client)
        Call count_Expensive(rng)
        totalCount = pigeonCount + expensiveCount
        Set rng = Range("A" & startingRow + addRows & ":A" & endingRow - subtractRows)
        addRows = 0
        Call print_PMD(rng)
    
    Case Is > 12:
        i = pigeonCount \ 12
        remainder = pigeonCount - (i * 12)
        'calculate ranges per 12 pigeon baskets
        nextStartingRow = 0

        For counter = 1 To i
                addRows = 11
                startingRow = Columns("E").Find(What:=client, LookAt:=xlWhole, MatchCase:=False).Row + nextStartingRow
                endingRow = startingRow + addRows
                addRows = 0
                nextStartingRow = nextStartingRow + 12

                Call count_Pigeons(client)
                Call count_Expensive(rng)
                totalCount = pigeonCount + expensiveCount
                'if all pigeons fit into one 12 size basket then:
                If totalCount = 12 Then
                    Set rng = Range("A" & startingRow & ":A" & endingRow)
                    addRows = 0
                    Call print_PMD(rng)
                End If
                
                'if the pigeons do not fit into a 12 size basket:
                If totalCount > 12 Then
                
                'basket part 1
                    addRows = 5
                    endingRow = startingRow + addRows
                    addRows = 0
                    Call count_Pigeons(client)
                    Call count_Expensive(rng)
                    totalCount = pigeonCount + expensiveCount
                    
                    Select Case totalCount
                        Case 1 To 6, 8, 10, 12:
                            Set rng = Range("A" & startingRow & ":A" & endingRow)
                            Call print_PMD(rng)
                            
                        Case 7, 9, 11:
                            'part 1 of basket part 1
                            subtractRows = Int(pigeonCount / 2)
                            totalPigeonCount = pigeonCount
                            Call count_Pigeons(client)
                            Call count_Expensive(rng)
                            totalCount = pigeonCount + expensiveCount
                            Set rng = Range("A" & startingRow + addRows & ":A" & endingRow - subtractRows)
                            Call print_PMD(rng)
                            
                            'part 2 of basket part 1
                            addRows = Int(totalPigeonCount / 2 + 0.999999)
                            subtractRows = 0
                            Call count_Pigeons(client)
                            Call count_Expensive(rng)
                            totalCount = pigeonCount + expensiveCount
                            Set rng = Range("A" & startingRow + addRows & ":A" & endingRow - subtractRows)
                            addRows = 0
                            Call print_PMD(rng)
                    End Select
                    
                    'basket part 2
                        addRows = 6
                        startingRow = startingRow + addRows
                        addRows = 5
                        endingRow = startingRow + addRows
                        addRows = 0
                        Call count_Pigeons(client)
                        Call count_Expensive(rng)
                        totalCount = pigeonCount + expensiveCount
                        
                        Select Case totalCount
                            Case 1 To 6, 8, 10, 12:
                                Set rng = Range("A" & startingRow & ":A" & endingRow)
                                Call print_PMD(rng)
                                
                            Case 7, 9, 11:
                                'part 1 of basket part 1
                                subtractRows = Int(pigeonCount / 2)
                                totalPigeonCount = pigeonCount
                                Call count_Pigeons(client)
                                Call count_Expensive(rng)
                                totalCount = pigeonCount + expensiveCount
                                Set rng = Range("A" & startingRow + addRows & ":A" & endingRow - subtractRows)
                                Call print_PMD(rng)
                                
                                'part 2 of basket part 1
                                addRows = Int(totalPigeonCount / 2 + 0.999999)
                                subtractRows = 0
                                Call count_Pigeons(client)
                                Call count_Expensive(rng)
                                totalCount = pigeonCount + expensiveCount
                                Set rng = Range("A" & startingRow + addRows & ":A" & endingRow - subtractRows)
                                addRows = 0
                                Call print_PMD(rng)
                        End Select
                End If
            Next
        'remainder
        Call set_Range(client)
        If remainder > 1 Then
            startingRow = endingRow - remainder
        Else
            startingRow = endingRow
        End If
        Call count_Pigeons(client)
        Call count_Expensive(rng)
        totalCount = pigeonCount + expensiveCount
    
        Select Case totalCount
    
        Case 1 To 6, 8, 10, 12:
            Set rng = Range("A" & startingRow & ":A" & endingRow)
            Call print_PMD(rng)

        Case 7, 9, 11:
            'add content to basket part 1
            addRows = 0
            subtractRows = Int(pigeonCount / 2)
            totalPigeonCount = pigeonCount
            Call set_Range(client)
            Call count_Pigeons(client)
            Call count_Expensive(rng)
            totalCount = pigeonCount + expensiveCount
            Set rng = Range("A" & startingRow + addRows & ":A" & endingRow - subtractRows)
            Call print_PMD(rng)
        
            'add content to basket part 2
            addRows = Int(totalPigeonCount / 2 + 0.999999)
            subtractRows = 0
            Call set_Range(client)
            Call count_Pigeons(client)
            Call count_Expensive(rng)
            totalCount = pigeonCount + expensiveCount
            Set rng = Range("A" & startingRow + addRows & ":A" & endingRow - subtractRows)
            addRows = 0
            Call print_PMD(rng)
        End Select
    End Select
Next client

[A1] = "P"
Pcount = 0
    
End Sub

'ipv met stukken van 12 te werken, kan je werken met een 'do until of while loop'
'je telt voor de klant met meer dan 12 totalcounts duif per duif op + dure duiven
'tot je aan 12 of meer total counts komt
'indien 12 counts -> gewone mand
'indien meer dan 12 (normaal 13), dan deel je de mand op in twee stukken

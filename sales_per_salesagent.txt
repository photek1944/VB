Option Explicit

Dim lastRow As Integer, lastRow2 As Integer
Dim nDate As Variant
Dim nTime As Variant
Dim Filename As String, wk_name As String, Sheet2Name As String
Dim wkb1 As Workbook, wkb2 As Workbook
Dim x As Integer, cell As Integer


Sub Sales_per_salesagent()

Application.ScreenUpdating = False
Application.DisplayAlerts = False

'herformatteert de datum en tijd van vandaag
nDate = Format(Date, "yyyy-mm-dd")
nTime = Format(Time, "(hhumm)")

'versie toevoegen
Range("H4").Value = "Versie: " & nDate & " " & "(" & Time & ")"

'geeft het werkblad de datum van vandaag als titel
ActiveWorkbook.Worksheets(1).Name = nDate & " " & nTime

'verandert de folder naar de map met de niet-betalerslijsten
ChDrive "N"
ChDir "N:\Medewerkers"

'laat de gebruiker een xl bestand kiezen om toe te voegen
Filename = Application.GetOpenFilename( _
    FileFilter:="xl Files,*.xl*,xm Files,*.xm*", _
    Title:="Selecteer de vorige sales spreadsheet.", _
MultiSelect:=False)

'maakt objecten van de actieve werkmap en creÃ«ert een nieuwe werkmap voor het geselecteerde bestand
Set wkb1 = ActiveWorkbook
Set wkb2 = Workbooks.Add(Filename)

'kopieert het eerste werkblad van het geselecteerde bestand naar de actieve werkmap
wkb2.Sheets(1).Copy after:=wkb1.Sheets(1)

'sluit de werkmap van de gekopieerde niet-betalerslijst
wkb2.Close

'slaat de nieuwe werkmap op als een xlsm bestand
wk_name = Range("J3").Value
ActiveWorkbook.SaveAs Filename:=nDate & " " & nTime & " " & wk_name, FileFormat:=xlOpenXMLWorkbookMacroEnabled

'converteren naar waarden
Worksheets(1).Activate
lastRow = Range("H:H").Find(what:="END", after:=Range("H5")).Row - 1
With Range("H6:AB" & lastRow)
    .Value = .Value
End With

'sorteren land -> klantnaam -> factuurdatum -> leveranciernaam -> ringnummer
ActiveWorkbook.Worksheets(1).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("V6:V" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("U6:U" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("P6:P" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("O6:O" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:= _
        Range("H6:H" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    With ActiveWorkbook.Worksheets(1).Sort
        .SetRange Range("H5:AB" & lastRow)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
End With

'inkleuren van rijen per klant
x = 0
For cell = 7 To lastRow
    If (Cells(cell, 20).Value = Cells(cell - 1, 20).Value) Then
            Range("H" & cell - 1 & ":AB" & cell - 1).Select
            Selection.Copy
            Range("H" & cell & ":AB" & cell).Select
            Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
                SkipBlanks:=False, Transpose:=False
            Application.CutCopyMode = False
    Else
        If x = 0 Then
            x = 1
            With Range("H" & cell & ":AB" & cell).Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .ThemeColor = xlThemeColorAccent1
                .TintAndShade = 0.799981688894314
                .PatternTintAndShade = 0
            End With
        ElseIf x = 1 Then
            x = 0
            With Range("H" & cell & ":AB" & cell).Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .ThemeColor = xlThemeColorDark1
                .TintAndShade = 0
                .PatternTintAndShade = 0
            End With
        End If
    End If
Next cell

'opmerkingen overnemen van de vorige lijst
Worksheets(2).Activate
lastRow2 = Range("H:H").Find(what:="END", after:=Range("H5")).Row - 1

Worksheets(1).Activate
Sheet2Name = Sheets(2).Name

Range("J6:J" & lastRow).Formula = "=IFERROR(IF(VLOOKUP($H6,'" & Sheet2Name & "'!$H$5:$AB$" & lastRow2 & ",3,FALSE)="""","""",VLOOKUP($H6,'" & Sheet2Name & "'!$H$5:$AB$" & lastRow2 & ",3,FALSE)),"""")"
Range("K6:K" & lastRow).Formula = "=IFERROR(IF(VLOOKUP($H6,'" & Sheet2Name & "'!$H$5:$AB$" & lastRow2 & ",4,FALSE)="""","""",VLOOKUP($H6,'" & Sheet2Name & "'!$H$5:$AB$" & lastRow2 & ",4,FALSE)),"""")"


Application.ScreenUpdating = True
Application.DisplayAlerts = True

End Sub
